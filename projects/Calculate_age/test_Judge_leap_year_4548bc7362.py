# Test generated by RoostGPT for test roost-test using AI Type Azure Open AI and AI Model roost-gpt4-32k

import unittest
from calendar import isleap
from calculate import judge_leap_year

class TestLeapYear(unittest.TestCase):

    def test_Judge_leap_year_4548bc7362(self):
        # Test with a normal leap year (divisible by 4 but not by 100)
        year = 2024
        result = judge_leap_year(year)
        self.assertEqual(result, isleap(year), 'Failed on year 2024 - Regular Leap Year')

        # Test with a centurial year that is not a leap year (divisible by 100 but not by 400)
        year = 2100
        result = judge_leap_year(year)
        self.assertEqual(result, isleap(year), 'Failed on year 2100 - Centurial Non-Leap Year')

        # Test with a centurial year that is a leap year (divisible by 400)
        year = 2400
        result = judge_leap_year(year)
        self.assertEqual(result, isleap(year), 'Failed on year 2400 - Centurial Leap Year')

        # Test with a non-leap year (not divisible by 4)
        year = 2021
        result = judge_leap_year(year)
        self.assertEqual(result, isleap(year), 'Failed on year 2021 - Non Leap Year')
        
if __name__ == "__main__":
    unittest.main()
