# Test generated by RoostGPT for test roost-test using AI Type Azure Open AI and AI Model roost-gpt4-32k

import unittest
from calculate import month_days

class TestCalculate(unittest.TestCase):

    def test_month_days(self):
        # Test with each month and check for correct output
        self.assertEqual(month_days(1, False), 31)
        self.assertEqual(month_days(3, False), 31)
        self.assertEqual(month_days(5, False), 31)
        self.assertEqual(month_days(7, False), 31)
        self.assertEqual(month_days(8, False), 31)
        self.assertEqual(month_days(10, False), 31)
        self.assertEqual(month_days(12, False), 31)
        self.assertEqual(month_days(4, False), 30)
        self.assertEqual(month_days(6, False), 30)
        self.assertEqual(month_days(9, False), 30)
        self.assertEqual(month_days(11, False), 30)
        self.assertEqual(month_days(2, True), 29)
        self.assertEqual(month_days(2, False), 28)
        
        # Assert return values when incorrect input is given
        with self.assertRaises(TypeError):
            month_days("March", True)  # Expected input is integer month
        with self.assertRaises(TypeError):
            month_days(3, "False")     # Expected input is boolean leap_year

if __name__ == '__main__':
    unittest.main(verbosity=2)
