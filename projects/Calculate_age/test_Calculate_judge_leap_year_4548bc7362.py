# Test generated by RoostGPT for test roost-test using AI Type Azure Open AI and AI Model roost-gpt4-32k

import unittest
import calculate
from unittest.mock import patch
from calendar import isleap

class TestCalculate(unittest.TestCase):
    
    def test_judge_leap_year(self):
        # Case 1: The year is leap
        self.assertTrue(calculate.judge_leap_year(2020))

        # Case 2: The year is not leap
        self.assertFalse(calculate.judge_leap_year(2021))

        # Case 3: Mocking isleap function to always return True
        with patch('calendar.isleap', return_value=True):
            self.assertTrue(calculate.judge_leap_year(2021))

        # Case 4: Mocking isleap function to always return False
        with patch('calendar.isleap', return_value=False):
            self.assertFalse(calculate.judge_leap_year(2020))
        
if __name__ == '__main__':
    unittest.main(verbosity=2)
