# Test generated by RoostGPT for test rahul-local-test using AI Type Azure Open AI and AI Model roost-gpt4-32k

"""
Scenario 1: Leap Year Input
Given that the input is a year that is evenly divisible by 4
And given that the year is not divisible by 100 
Or given that the year is divisible by 400
When the function judge_leap_year is called with the year
Then the output should be True

Scenario 2: Non-Leap Year Input
Given that the input is a year that is not evenly divisible by 4
Or given that the year is divisible by 100 and not by 400
When the function judge_leap_year is called with the year
Then the output should be False

Scenario 3: Negative Year Input
Given that the input is a negative year
When the function judge_leap_year is called with the year
Then the function's behavior is undefined and the result cannot be determined

Scenario 4: Year = 0
Given that the input is the year 0
When the function judge_leap_year is called with the year
Then the function's behavior is undefined and the result cannot be determined

Scenario 5: Non-Integral Year Input
Given that the input is a year that is not a whole number
When the function judge_leap_year is called with the year
Then the function's behavior is undefined and the result cannot be determined
"""
import pytest
import calculate
from calendar import isleap

def test_judge_leap_year():

    # Scenario 1: Leap Year Input
    assert calculate.judge_leap_year(2020) == True
    assert calculate.judge_leap_year(2000) == True
    assert calculate.judge_leap_year(2400) == True
    
    # Scenario 2: Non-Leap Year Input
    assert calculate.judge_leap_year(2001) == False
    assert calculate.judge_leap_year(1900) == False
    assert calculate.judge_leap_year(2002) == False
    
    # Scenario 3: Negative Year Input
    with pytest.raises(ValueError): # Expect a ValueError for negative year values
        assert isleap(-200)
        
    # Scenario 4: Year = 0
    with pytest.raises(ValueError): # Expect a ValueError for year zero
        assert isleap(0)

    # Scenario 5: Non-Integral Year Input
    with pytest.raises(TypeError): # Expect a TypeError for non-integral values
        assert isleap(2005.5)

test_judge_leap_year()
