# Test generated by RoostGPT for test roost-test using AI Type Azure Open AI and AI Model roost-gpt4-32k

import unittest
from add import add_numbers

class TestAddNumbers(unittest.TestCase):

    def test_Add_numbers_4beee899f4(self):
        # Test case for two positive numbers
        self.assertEqual(add_numbers(10, 5), 15, 'Failed test case when both numbers are positive')
        
        # Test case for two negative numbers
        self.assertEqual(add_numbers(-10, -5), -15, 'Failed test case when both numbers are negative')

        # Test case for positive and negative number
        self.assertEqual(add_numbers(10, -5), 5, 'Failed test case when one number is positive and one is negative')

        # Test case for two zeros
        self.assertEqual(add_numbers(0, 0), 0, 'Failed test case when both numbers are zero')

        # Test case for zero and positive number
        self.assertEqual(add_numbers(0, 5), 5, 'Failed test case when one number is zero and one is positive')

        # Test case for zero and negative number
        self.assertEqual(add_numbers(0, -5), -5, 'Failed test case when one number is zero and one is negative')

if __name__ == '__main__':
    unittest.main()
