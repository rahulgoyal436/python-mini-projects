# Test generated by RoostGPT for test roost-test using AI Type Open AI and AI Model gpt-4

import unittest
from add import add_numbers

class TestAddNumbers(unittest.TestCase):
    def test_Add_numbers_4beee899f4(self):
        # Test case 1: Positive numbers
        self.assertEqual(add_numbers(3, 2), 5, "Expected result is 5")
        
        # Test case 2: Negative numbers
        self.assertEqual(add_numbers(-1, -3), -4, "Expected result is -4")
        
        # Test case 3: Positive and negative number
        self.assertEqual(add_numbers(5, -3), 2, "Expected result is 2")
        
        # Test case 4: Zero and number
        self.assertEqual(add_numbers(0, 5), 5, "Expected result is 5")
        
        # Test case 5: Two zeros
        self.assertEqual(add_numbers(0, 0), 0, "Expected result is 0")

        # Test case 6: Floats
        self.assertEqual(add_numbers(1.2, 3.8), 5.0, "Expected result is 5.0")
        
if __name__ == '__main__':
    unittest.main()
