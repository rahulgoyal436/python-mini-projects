# Test generated by RoostGPT for test roost-test using AI Type Azure Open AI and AI Model roost-gpt4-32k

import unittest
from add import add_numbers

class TestAddNumbers(unittest.TestCase):
    def test_Add_numbers_4beee899f4(self):
        
        # Test when num1 and num2 are both positive integers
        num1, num2 = 5, 7
        result = add_numbers(num1, num2)
        self.assertEqual(result, 12, f"Expected 12 but got {result}")
        
        # Test when num1 is a positive integer and num2 is a negative integer
        num1, num2 = 5, -7
        result = add_numbers(num1, num2)
        self.assertEqual(result, -2, f"Expected -2 but got {result}")

        # Test when num1 and num2 are both negative integers
        num1, num2 = -5, -7
        result = add_numbers(num1, num2)
        self.assertEqual(result, -12, f"Expected -12 but got {result}")

        # Test when num1 and num2 are both positive floats
        num1, num2 = 5.3, 7.4
        result = add_numbers(num1, num2)
        self.assertEqual(result, 12.7, f"Expected 12.7 but got {result}")

        # Test when num1 is a positive float and num2 is a negative float
        num1, num2 = 5.3, -7.4
        result = add_numbers(num1, num2)
        self.assertEqual(result, -2.1, f"Expected -2.1 but got {result}")

        # Test when num1 and num2 are both negative floats
        num1, num2 = -5.3, -7.4
        result = add_numbers(num1, num2)
        self.assertEqual(result, -12.7, f"Expected -12.7 but got {result}")

if __name__ == '__main__':
    unittest.main()
