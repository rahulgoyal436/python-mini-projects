# Test generated by RoostGPT for test roost-test using AI Type Azure Open AI and AI Model roost-gpt4-32k

import unittest
from add import add_numbers

class TestAddNumbers(unittest.TestCase):

    def test_Add_numbers_4beee899f4(self):
        # Test case 1: integer inputs
        self.assertEqual(add_numbers(5, 3), 8)

        # Test case 2: float inputs
        self.assertEqual(add_numbers(4.5, 1.5), 6)

        # Test case 3: Negative numbers
        self.assertEqual(add_numbers(-3, -2), -5)

        # Test case 4: Combination of positive and negative number
        self.assertEqual(add_numbers(-3, 2), -1)

        # Test case 5: if num1 or num2 is not an integer or float, it should raise a TypeError.
        with self.assertRaises(TypeError):
            add_numbers("3", 2)

        with self.assertRaises(TypeError):
            add_numbers(3, "2")

        with self.assertRaises(TypeError):
            add_numbers("3", "2")

if __name__ == '__main__':
    unittest.main()
