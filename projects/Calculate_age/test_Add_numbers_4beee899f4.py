# Test generated by RoostGPT for test roost-test using AI Type Azure Open AI and AI Model roost-gpt4-32k

import unittest
from add import add_numbers

class TestAddNumbers(unittest.TestCase):

    def test_Add_numbers_4beee899f4(self):
        # Test case 1 - Positive Test: Testing with positive numbers
        # Here we are giving 3 and 7 as input numbers and 10 as expected output
        self.assertEqual(add_numbers(3, 7), 10, "Should be 10")

        # Test case 2 - Positive Test: Testing with Negative numbers
        # Here we are giving -2 and -8 as input numbers and -10 as the expected output
        self.assertEqual(add_numbers(-2, -8), -10, "Should be -10")

        # Test case 3 - Edge Test: Testing with zero
        # Here we are giving 0 and 5 as input numbers and 5 as the expected output
        self.assertEqual(add_numbers(0, 5), 5, "Should be 5")

        # Test case 4 - Edge Test: Testing with large values
        # Here we are giving two large numbers as input and their sum as expected output
        self.assertEqual(add_numbers(10000000, 20000000), 30000000, "Should be 30000000")

        # TODO Change the values for additional test cases as per your requirement
    
if __name__ == '__main__':
    unittest.main()
