# Test generated by RoostGPT for test roost-test using AI Type Azure Open AI and AI Model roost-gpt4-32k

import unittest
from add import add_numbers

class TestAddNumbers(unittest.TestCase):

    def test_Add_numbers_4beee899f4(self):
        # Test Case 1: Testing with positive integers
        self.assertEqual(add_numbers(4, 5), 9, "Should be 9")

        # Test Case 2: Testing with negative integers
        self.assertEqual(add_numbers(-3, -4), -7, "Should be -7")

        # Test Case 3: Testing with mixing positive nad negative integers
        self.assertEqual(add_numbers(-5, 3), -2, "Should be -2")

        # Test Case 4: Test with floats
        self.assertAlmostEqual(add_numbers(1.23, 4.77), 6.00, places=2, msg="Should be 6.00")

        # Test Case 5: Testing with Zero
        self.assertEqual(add_numbers(0, 5), 5, "Should be 5")

if __name__ == '__main__':
    unittest.main()
