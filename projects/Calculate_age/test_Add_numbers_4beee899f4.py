# Test generated by RoostGPT for test roost-test using AI Type Open AI and AI Model gpt-4

import unittest
from add import add_numbers

class TestAddNumbers(unittest.TestCase):

    def test_Add_numbers_4beee899f4(self):
        # Test when both numbers are positive
        self.assertEqual(add_numbers(1, 2), 3)

        # Test when both numbers are negative
        self.assertEqual(add_numbers(-1, -2), -3)

        # Test when one number is negative and other is positive
        self.assertEqual(add_numbers(-1, 2), 1)

        # Test when one number is zero and other is positive
        self.assertEqual(add_numbers(0, 2), 2)

        # Test when one number is zero and other is negative
        self.assertEqual(add_numbers(0, -2), -2)

        # Test when both numbers are zero
        self.assertEqual(add_numbers(0, 0), 0)

        # Test when numbers are float
        self.assertAlmostEqual(add_numbers(1.2, 2.3), 3.5)

        # Test when one number is float and other is integer
        self.assertAlmostEqual(add_numbers(1.2, 2), 3.2)

        # Test when one number is float and other is negative integer
        self.assertAlmostEqual(add_numbers(1.2, -2), -0.8)
        
        # Test when one number is float and other is negative float
        self.assertAlmostEqual(add_numbers(1.2, -2.2), -1.0)

if __name__ == '__main__':
    unittest.main()
