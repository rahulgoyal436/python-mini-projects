# Test generated by RoostGPT for test roost-test using AI Type Azure Open AI and AI Model roost-gpt4-32k

# Start by importing the necessary modules
# We will use unittest since it's a built-in Python module for testing.
import unittest

# Assuming we have add_numbers in add module
from add import add_numbers

class TestAddNumbers(unittest.TestCase):
    def test_Add_numbers_4beee899f4(self):
        # Test case 1: normal integers
        self.assertEqual(add_numbers(1, 2), 3)

        # Test case 2 : negative integers
        self.assertEqual(add_numbers(-1, -2), -3)

        # Test case 3: integer and float
        self.assertEqual(add_numbers(1, 1.1), 2.1)

        # Test case 4: float values
        self.assertEqual(add_numbers(0.1, 0.2), 0.3)

        # Test case 5: string values - This should raise an error since we can't add strings.
        with self.assertRaises(TypeError):
            add_numbers('1', '2')

        # Test case 6: complex numbers
        self.assertEqual(add_numbers(1 + 1j, 2 + 2j), (3+3j))

# Run the tests
if __name__ == '__main__':
    unittest.main()
