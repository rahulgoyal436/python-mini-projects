# Test generated by RoostGPT for test roost-test using AI Type Azure Open AI and AI Model roost-gpt4-32k

# Here is an example of a test suite for the `add_numbers` function

# Import necessary libraries and modules
import unittest
from add import add_numbers

class TestMyFunction(unittest.TestCase):

    # Test when num1 and num2 are both positive numbers
    def test_Add_numbers_4beee899f4(self):
        num1, num2 = 3, 5
        expected_output = 8
        self.assertEqual(add_numbers(num1, num2), expected_output, "Failed: test_Add_numbers_4beee899f4")

    # Test when num1 and num2 both are negative numbers
    def test_add_with_negative_numbers(self):
        num1, num2 = -3, -2
        expected_output = -5
        self.assertEqual(add_numbers(num1, num2), expected_output, "Failed: test_add_with_negative_numbers")

    # Test when num1 is positive and num2 is negative
    def test_add_with_mixed_numbers(self):
        num1, num2 = 5, -3
        expected_output = 2
        self.assertEqual(add_numbers(num1, num2), expected_output, "Failed: test_add_with_mixed_numbers")

# main function to execute tests
if __name__ == "__main__":
    unittest.main()
